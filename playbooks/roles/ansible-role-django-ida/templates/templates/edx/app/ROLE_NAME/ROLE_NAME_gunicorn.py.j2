"""
gunicorn configuration file: http://docs.gunicorn.org/en/develop/configure.html
{{ '{{' }} ansible_managed }}
"""

timeout = {{ '{{' }} {{ role_name }}_gunicorn_timeout }}
bind = "{{ '{{' }} {{ role_name }}_gunicorn_host }}:{{ '{{' }} {{ role_name }}_gunicorn_port }}"
pythonpath = "{{ '{{' }} {{ role_name }}_code_dir }}"
workers = {{ '{{' }} {{ role_name|upper }}_GUNICORN_WORKERS }}
worker_class = "{{ '{{' }} {{ role_name|upper }}_GUNICORN_WORKER_CLASS }}"

def post_fork(server, worker):
    """
    Close the cache so that newly forked workers cannot accidentally share the
    socket with the processes they were forked from. This prevents a race
    condition in which one worker could get a cache response intended for
    another worker.
    """
    from django.core.cache import cache
    cache.close()

{{ '{{' }} {{ role_name|upper }}_GUNICORN_EXTRA_CONF }}
