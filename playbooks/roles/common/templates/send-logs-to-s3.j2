#!/bin/bash
#
#  This script can be called from logrotate
#  to sync logs to s3

if (( $EUID != 0 )); then
    echo "Please run as the root user"
    exit 1
fi

exec > >(tee /var/log/s3-log-sync.log) 
exec 2>&1

shopt -s extglob

NOTIFY_EMAIL={{ COMMON_S3_LOGS_NOTIFY_MAIL }}
S3CMD=/var/tmp/s3cmd-1.5.0-alpha2/s3cmd

usage() {

  cat<<EO
 
  A wrapper of s3cmd sync that will sync files to
  an s3 bucket, will send mail to {{ COMMON_S3_LOGS_NOTIFY_MAIL }} 
  on failures.
 
  Usage: $PROG <path-to-sync> <s3-bucket-path> 
            -v    add verbosity (set -x)
            -n    echo what will be done
            -h    this

     <s3-path> - path to s3 bucket and folder for sync
     <path-to-sync> - path on the filesystem to sync

  Example:
      /edx/bin/send-logs-to-s3 -v /edx/var/log/lms  s3://edx-ec2-app-logs
EO
}

while getopts "vhn" opt; do
  case $opt in
    v)
      set -x
      shift
      ;;
    h)
      usage
      exit 0
      ;;
    n)
      noop="echo Would have run: "
      shift
  esac
done

if [[ -z $1 || -z $2 ]]; then
    echo
    echo "ERROR: You must specify an s3 url and a path"
    usage
    exit 1
fi


# Ensure that curl, s3cmd and mail are
# installed prior to execution

command -v mail >/dev/null 2>&1 || {
  apt-get install -y mailutils
}

command -v $S3CMD >/dev/null 2>&1 || {
  cd /var/tmp
  curl -o s3cmd-1.5.0-alpha2.tar.gz http://files.edx.org/s3cmd/s3cmd-1.5.0-alpha2.tar.gz
  tar zxvf s3cmd-1.5.0-alpha2.tar.gz
}

command -v curl >/dev/null 2>&1 || {
  apt-get install -y curl
}

# grab the first security group for the instance
# which will be used as a directory name in the s3
# bucket

# If there are any errors from this point
# send mail to $NOTIFY_EMAIL

set -e

sec_grp=unset
instance_id=unset
s3_path=unset

onerror() {
  if [[ -z $noop ]]; then
    echo "ERROR: syncing $s3_path on $instance_id"
    cat /var/log/s3-log-sync.log | mail -s "Error syncing $s3_path on $instance_id" $NOTIFY_EMAIL
  else
    echo "Error syncing $s3_path on $instance_id"
  fi
}

trap onerror ERR SIGHUP SIGINT SIGTERM 

# first security group is used as the directory name in the bucket
sec_grp=$(curl -s http://169.254.169.254/latest/meta-data/security-groups | head -1)
instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
ip=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)

s3_path="${2}/$sec_grp/"

$noop $S3CMD sync $1 ${2}/$sec_grp/${instance_id}-${ip}/
