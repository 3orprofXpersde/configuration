"""
gunicorn configuration file: http://docs.gunicorn.org/en/develop/configure.html
{{ ansible_managed }}
"""

timeout = {{ programs_gunicorn_timeout }}
bind = "{{ programs_gunicorn_host }}:{{ programs_gunicorn_port }}"
pythonpath = "{{ programs_code_dir }}"
workers = {{ PROGRAMS_GUNICORN_WORKERS }}
worker_class = "{{ PROGRAMS_GUNICORN_WORKER_CLASS }}"

def post_fork(server, worker):
    """
    Close the cache so that newly forked workers cannot accidentally share the
    socket with the processes they were forked from. This prevents a race
    condition in which one worker could get a cache response intended for
    another worker.
    """
    from django.core.cache import cache
    cache.close()

{{ PROGRAMS_GUNICORN_EXTRA_CONF }}
